"use strict";!function(){function e(e,t,n){e.addEventListener("click",function(){r!==t&&(r+=n,a.style.transform="translateX(".concat(r,"%)"))})}var t,n,o,a,r;t="advantagesLeftBtn",n="advantagesRightBtn",o="advantagesList",t=document.getElementById(t),n=document.getElementById(n),a=document.getElementById(o),e(t,r=0,100),e(n,-100*(a.childElementCount-1),-100)}(),function(){var t=document.querySelector(".hamburger"),n=document.querySelector(".wrapper"),o=document.querySelector(".overlay"),a=document.getElementsByClassName("overlay__menu-link"),r=!1;t.addEventListener("click",function(){t.classList.toggle("hamburger--active"),o.classList.toggle("overlay--active"),(r=!r)?(n.style.height="100vh",n.style.overflow="hidden"):(n.style.height=null,n.style.overflow=null);for(var e=0;e<a.length;e++)a[e].addEventListener("click",function(){n.style.height=null,n.style.overflow=null,t.classList.remove("hamburger--active"),o.classList.remove("overlay--active"),r=!1})})}(),function(){var o;ymaps.ready(function(){o=new ymaps.Map("map",{center:[55.835502,37.509817],zoom:13,l:"sat"});for(var e=[[55.836701,37.510107]],t=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"../img/marker.svg",iconImageSize:[46,57],iconImageOffset:[-35,-52]}),n=0;n<e.length;n++)t.add(new ymaps.Placemark(e[n]));o.geoObjects.add(t)})}(),function(){var e=window.outerWidth;document.body.parentElement.style.fontSize="".concat(820<e?e/85.333:e/66.67,"px")}(),function(){var e=document.querySelector(".form"),t=document.getElementsByClassName("form__input"),n=document.getElementsByClassName("form__group"),o=document.querySelector(".form__textarea");var a=window.outerWidth,r=window.outerHeight;820<a?(e.style.width="".concat(.7*a,"px"),e.style.height="".concat(.7*r,"px")):(e.style.width="".concat(a,"px"),e.style.height="".concat(.9*r,"px"));for(var l=0;l<t.length;l++)t[l].style.height="".concat(.05*r,"px");for(var c=0;c<n.length;c++)for(var i=n[c].children,d=0;d<i.length;d++)i[d].style.width="".concat(7*a/i.length,"px");o.parentNode.style.width="100%",o.style.height="".concat(820<a?.2*r:420<a?.55*r:.5*r,"px")}(),function(){var e,t;e=document.querySelector(".intro__content"),t=window.outerWidth,e.style.width="".concat(t/2.276,"px")}(),function(){var l=document.getElementsByClassName("advantages__item"),c=document.getElementsByClassName("catalog__item");function i(e,t,n,o){var a=window.innerHeight,r=window.innerWidth,t=a*t,a=a/o;e.style.width="".concat(r*n,"px"),e.style.height="".concat(t,"px"),e.style.fontSize="".concat(a,"px")}for(var e,t=["load","resize"],n=0;n<t.length;n++)e=t[n],window.addEventListener(e,function(){if(820<window.outerWidth){for(var e=0;e<l.length;e++)i(l[e],.55,.2,30);for(var t=0;t<c.length;t++)i(c[t],.4,.28,30)}else if(420<window.outerWidth){for(var n=0;n<l.length;n++)i(l[n],.45,.4,40);for(var o=0;o<c.length;o++)i(c[o],.27,.45,65)}else{for(var a=0;a<l.length;a++)i(l[a],.33,.46,22.7);for(var r=0;r<c.length;r++)i(c[r],.27,.45,65)}})}(),function(){var e=document.querySelector(".overlay__menu"),t=window.outerWidth;e.style.fontSize="".concat(t/15,"px")}(),window.addEventListener("load",function(){document.body.parentElement.classList.add("loaded")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
